{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","props","state","markdown","updateMarkdown","bind","handleChangeMarkdown","resetMarkdown","saveMarkdown","this","setState","data","dataURI","Buffer","toString","saveAs","e","target","value","marked","require","inputStyle","width","height","marginLeft","marginRight","marginBottom","padding","className","style","id","variant","class","onChange","console","log","overflowY","backgroundColor","textAlign","dangerouslySetInnerHTML","__html","onClick","React","Component"],"mappings":"sMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,qKCXqBY,E,kDACnB,WAAYG,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACTC,SAAS,kbA0BX,EAAKC,eAAe,EAAKA,eAAeC,KAApB,gBACpB,EAAKC,qBAAqB,EAAKA,qBAAqBD,KAA1B,gBAC1B,EAAKE,cAAc,EAAKA,cAAcF,KAAnB,gBACnB,EAAKG,aAAa,EAAKA,aAAaH,KAAlB,gBAhCF,E,kDAoClB,SAAeF,GACbM,KAAKC,SAAS,CAACP,e,2BAIjB,WACEM,KAAKC,SAAS,CACZP,SAAS,O,0BAKb,WACE,IAAIQ,EAAOF,KAAKP,MAAMC,SAGhBS,EAAU,0BAFL,IAAIC,EAAOF,GACIG,SAAS,UAEnCC,YAAOH,EAAS,gB,kCAIlB,SAAqBI,GACnBP,KAAKL,eAAeY,EAAEC,OAAOC,S,oBAG/B,WACE,IAAIC,EAAOC,EAAQ,IAEfC,EAAa,CACfC,MAAM,OACNC,OAAO,OACPC,WAAY,OACZC,YAAY,OACZC,aAAa,OACbC,QAAQ,QAeV,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,WACfC,MAAO,CACLL,WAAW,MACXC,YAAY,OAHd,SAKE,qBAAKG,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UAGE,oBAAIE,GAAG,eAAP,SACE,cAAC,IAAD,CAAOF,UAAU,oBAAoBG,QAAQ,QAA7C,SACE,mBAAGD,GAAG,YAAN,oCAGJ,sBAAKF,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UAGE,qBAAKA,UAAU,kBAAf,SACE,6BACE,cAAC,IAAD,CAAOA,UAAU,oBAAoBG,QAAQ,QAA7C,SACE,mBAAGC,MAAM,eAAT,kCAMN,qBACAJ,UAAU,aACVC,MAAOR,EAFP,SAGE,0BAAUS,GAAG,SAASD,MAAOR,EAAYH,MAAOT,KAAKP,MAAMC,SAAU8B,SAAUxB,KAAKH,qBAApF,SACG4B,QAAQC,IAAI1B,KAAKP,MAAMC,iBAM9B,sBAAKyB,UAAU,0BAAf,UAGE,qBAAKA,UAAU,kBAAf,SACE,oBAAII,MAAM,eAAV,SACE,cAAC,IAAD,CAAOJ,UAAU,oBAAoBG,QAAQ,QAA7C,SACE,mBAAGC,MAAM,eAAT,2BAMN,qBACAF,GAAG,UACHD,MAjEI,CAChBP,MAAM,OACNC,OAAO,OACPa,UAAU,SACVC,gBAAgB,UAChBC,UAAU,OACVd,WAAW,OACXC,YAAY,OACZC,aAAa,OACbC,QAAQ,QAyDIY,wBAAyB,CAACC,OAAOrB,EAAOV,KAAKP,MAAMC,mBAMvD,wBAAQyB,UAAU,cAAca,QAAShC,KAAKF,cAA9C,mBAGA,uBAEA,wBAAQqB,UAAU,aAAaa,QAAShC,KAAKD,aAA7C,sCAMN,wE,GA7JyBkC,IAAMC,a","file":"static/js/main.c8db1493.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport './styles/App.css';\nimport Badge from 'react-bootstrap/Badge';\nimport { saveAs } from '@progress/kendo-file-saver';\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      markdown:`# Here is H1  \n## Here is H2\nThis is [Blank link](#)  \nThis is some \\`inline code \\`\n~~~\n  <script>\n    if(true){\n      console.log('This is code block');\n    }\n  </script>\n~~~\n1. This\n2. Is\n3. List\n    1. With\n    2. Nested\n4. List  \n\n>\"Every single weâ€™ll be emitting more greenhouse gases than the previous year. \n>\n>>by Bill Gates  \n\n![This is image (or supposed to be)](#)  \n\nThis is **bold** text`,\n    };\n    this.updateMarkdown=this.updateMarkdown.bind(this);\n    this.handleChangeMarkdown=this.handleChangeMarkdown.bind(this);\n    this.resetMarkdown=this.resetMarkdown.bind(this);\n    this.saveMarkdown=this.saveMarkdown.bind(this);\n  }\n\n  //set textarea to state\n  updateMarkdown(markdown){\n    this.setState({markdown});\n  }\n\n  // reset markdown\n  resetMarkdown(){\n    this.setState({\n      markdown:''\n    })\n  }\n\n  // save markdown as html file\n  saveMarkdown(){\n    let data = this.state.markdown;\n    let buff = new Buffer(data);\n    let stringToBase64 = buff.toString('base64');\n    const dataURI = \"data:text/plain;base64,\" + stringToBase64;\n    saveAs(dataURI, \"index.html\");\n  }\n\n  // handle change in textarea and set it to state\n  handleChangeMarkdown(e){\n    this.updateMarkdown(e.target.value);\n  }\n\n  render(){\n    let marked=require('marked');\n\n    let inputStyle = {\n      width:'100%',\n      height:'50vh',\n      marginLeft: 'auto',\n      marginRight:'auto',\n      marginBottom:'15px',\n      padding:'10px'\n    };\n\n    let outputStyle = {\n      width:'100%',\n      height:'50vh',\n      overflowY:'scroll',\n      backgroundColor:'#DCDCDC',\n      textAlign:'left',\n      marginLeft:'auto',\n      marginRight:'auto',\n      marginBottom:'15px',\n      padding:'10px'\n    };\n\n    return(\n      <div className=\"App\">\n        <div className='row mt-4'\n        style={{\n          marginLeft:'0px',\n          marginRight:'0px',\n        }}>\n          <div className='col text-center'>\n            <div className='container'>\n\n              {/** title header */}\n              <h1 id='title-header'>\n                <Badge className='text-align-center' variant='light'>\n                  <p id='app-title'>Markdown Previewer</p>\n                </Badge>\n              </h1>\n              <div className='row mt-4'>\n                <div className='col-md-6'>\n\n                  {/** header div */}\n                  <div className='col text-center'>\n                    <h2>\n                      <Badge className='text-align-center' variant='light'>\n                        <p class='header-title'>Markdown Input</p>\n                      </Badge>\n                    </h2>\n                  </div>\n\n                  {/** input div */}\n                  <div \n                  className='mark-input' \n                  style={inputStyle}>\n                    <textarea id='editor' style={inputStyle} value={this.state.markdown} onChange={this.handleChangeMarkdown}>\n                      {console.log(this.state.markdown)}\n                    </textarea>\n                  </div>\n\n                </div>\n\n                <div className='col-md-6 preview-column'>\n\n                  {/** preview div */}\n                  <div className='col text-center'>\n                    <h2 class='header-title'>\n                      <Badge className='text-align-center' variant='light'>\n                        <p class='header-title'>Preview</p>\n                      </Badge>\n                    </h2>\n                  </div>\n\n                  {/** output div */}\n                  <div\n                  id='preview'\n                  style={outputStyle}\n                  dangerouslySetInnerHTML={{__html:marked(this.state.markdown)}}\n                  ></div>\n                </div>\n              </div>\n\n              {/** markdown reset button */}\n              <button className='reset-style' onClick={this.resetMarkdown}>\n                RESET\n              </button>\n              <br/>\n              {/** save as html file button */}\n              <button className='save-style' onClick={this.saveMarkdown}>\n                SAVE AS HTML FILE\n              </button>\n            </div>\n          </div>\n        </div>\n        <footer>App made by Martin Bulkowki</footer>\n      </div>\n    )\n  }\n}"],"sourceRoot":""}